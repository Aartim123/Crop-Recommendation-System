# -*- coding: utf-8 -*-
"""Crop Recommendation System .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HX9E57a-D-E7nf6JEfM_IRKR3qLYyotG
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
import joblib

df = pd.read_csv("/content/Crop_recommendation.csv")
df.head(6)

df.isnull().sum()

df.info()

df['label'].value_counts()

x=df.drop("label",axis=1)
y=df['label']

x.info()
y.info()

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1,test_size=0.2)

x_train.info()

x_test.info()

y_train.info()

y_test.info()

#logistic regression model
model= LogisticRegression()
model.fit(x_train,y_train)

y_pred1=model.predict(x_test)

logistic_reg_acc= accuracy_score(y_test,y_pred1)
print("Accuracy of logistic regression is " + str(logistic_reg_acc))

model2=DecisionTreeClassifier()
model2.fit(x_train,y_train)
y_pred2=model2.predict(x_test)
decision_tree_acc= accuracy_score(y_test,y_pred2)
print("Accuracy of decision tree is " + str(decision_tree_acc))

model3=RandomForestClassifier()
model3.fit(x_train,y_train)
y_pred3=model3.predict(x_test)
Random_forest_acc= accuracy_score(y_test,y_pred3)
print("Accuracy of Random forest is " + str(decision_tree_acc))

filename = ' crop app'

joblib.dump(model2, 'crop app')

app=joblib.load('crop app')

arr=[[90,42,43,20.879744,82.002744,6.502985,202.935536]]
y_pred5=app.predict(arr)

y_pred5